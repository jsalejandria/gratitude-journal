{"ast":null,"code":"var _jsxFileName = \"/home/justin/Desktop/gratitude-journal/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport postServices from \"./services/postServices\";\nimport Filter from \"./components/filter\";\nimport PostForm from \"./components/postForm\";\nimport Posts from \"./components/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    postServices.getAll().then(response => {\n      setPosts(response.data);\n    });\n  }, []);\n  const [filter, setFilter] = useState(\"\");\n  const [newContent, setNewContent] = useState(\"\");\n  const [newDate, setNewDate] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const handleFilter = event => {\n    setFilter(event.target.value);\n  };\n  const handleNewPost = event => {\n    setNewContent(event.target.value);\n  };\n  const handleNewDate = event => {\n    setNewDate(event.target.value);\n  };\n  const addNewPost = event => {\n    const newPost = {\n      content: newContent,\n      date: newDate,\n      id: posts.length + 1\n    };\n    const postToChange = posts.find(post => post.date === newDate);\n    const changedPost = {\n      ...postToChange,\n      content: newContent\n    };\n    event.preventDefault();\n    if (posts.map(post => post.date === newDate)) {\n      if (window.confirm(\"There is already an exising entry for \" + newDate + \". Edit the content for this date?\") === true) {\n        postServices.update(postToChange.id, changedPost).then(response => {\n          return response.data;\n        }).catch(error => {\n          setSuccessMessage(`Entry for ${newDate} has already been removed from the server`);\n          setTimeout(() => {\n            setSuccessMessage(null);\n          }, 5000);\n        });\n        postServices.getAll().then(response => {\n          setPosts(response.data);\n        });\n        setSuccessMessage(`Updated the entry for ${newDate}`);\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 5000);\n      } else {\n        return;\n      }\n    } else {\n      setPosts(posts.concat(newPost));\n      setSuccessMessage(`Added an entry for ${newDate}`);\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 5000);\n      setNewContent(\"\");\n      setNewDate(\"\");\n      postServices.create(newPost).then(response => {\n        setPosts(posts.concat(response.data));\n      });\n    }\n  };\n  const filtered = posts.filter(post => {\n    if (post.content === undefined || filter === undefined) {\n      return;\n    } else {\n      return post.content.toLowerCase().includes(filter.toLowerCase());\n    }\n  });\n  const handleDelete = event => {\n    const idDelete = event.target.id;\n    const postDelete = event.target.date;\n    console.log(postDelete);\n    if (window.confirm(`Are you sure you want to delete the entry for ${postDelete}?`)) {\n      postServices.deletePost(idDelete).then(response => {\n        return response.data;\n      });\n      postServices.getAll().then(response => {\n        setPosts(response.data);\n      });\n      setSuccessMessage(`Deleted the entry for ${postDelete}`);\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 5000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gratitude Journal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filter: filter,\n      handleFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a new post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n      addNewPost: addNewPost,\n      newContent: newContent,\n      handleNewPost: handleNewPost,\n      newDate: newDate,\n      handleNewDate: handleNewDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Entries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Posts, {\n      posts: posts,\n      filtered: filtered,\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"CPu85jo5t5pef8MnQgwn6KeqsOM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","postServices","Filter","PostForm","Posts","jsxDEV","_jsxDEV","App","_s","posts","setPosts","getAll","then","response","data","filter","setFilter","newContent","setNewContent","newDate","setNewDate","successMessage","setSuccessMessage","handleFilter","event","target","value","handleNewPost","handleNewDate","addNewPost","newPost","content","date","id","length","postToChange","find","post","changedPost","preventDefault","map","window","confirm","update","catch","error","setTimeout","concat","create","filtered","undefined","toLowerCase","includes","handleDelete","idDelete","postDelete","console","log","deletePost","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/justin/Desktop/gratitude-journal/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport postServices from \"./services/postServices\";\n\nimport Filter from \"./components/filter\";\nimport PostForm from \"./components/postForm\";\nimport Posts from \"./components/posts\";\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    postServices.getAll().then((response) => {\n      setPosts(response.data);\n    });\n  }, []);\n\n  const [filter, setFilter] = useState(\"\");\n  const [newContent, setNewContent] = useState(\"\");\n  const [newDate, setNewDate] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const handleNewPost = (event) => {\n    setNewContent(event.target.value);\n  };\n\n  const handleNewDate = (event) => {\n    setNewDate(event.target.value);\n  };\n\n  const addNewPost = (event) => {\n    const newPost = {\n      content: newContent,\n      date: newDate,\n      id: posts.length + 1,\n    };\n    const postToChange = posts.find((post) => post.date === newDate);\n    const changedPost = { ...postToChange, content: newContent };\n    event.preventDefault();\n\n    if (posts.map((post) => post.date === newDate)) {\n      if (\n        window.confirm(\n          \"There is already an exising entry for \" +\n            newDate +\n            \". Edit the content for this date?\"\n        ) === true\n      ) {\n        postServices\n          .update(postToChange.id, changedPost)\n          .then((response) => {\n            return response.data;\n          })\n          .catch((error) => {\n            setSuccessMessage(\n              `Entry for ${newDate} has already been removed from the server`\n            );\n            setTimeout(() => {\n              setSuccessMessage(null);\n            }, 5000);\n          });\n        postServices.getAll().then((response) => {\n          setPosts(response.data);\n        });\n        setSuccessMessage(`Updated the entry for ${newDate}`);\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 5000);\n      } else {\n        return;\n      }\n    } else {\n      setPosts(posts.concat(newPost));\n      setSuccessMessage(`Added an entry for ${newDate}`);\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 5000);\n      setNewContent(\"\");\n      setNewDate(\"\");\n\n      postServices.create(newPost).then((response) => {\n        setPosts(posts.concat(response.data));\n      });\n    }\n  };\n\n  const filtered = posts.filter((post) => {\n    if (post.content === undefined || filter === undefined) {\n      return;\n    } else {\n      return post.content.toLowerCase().includes(filter.toLowerCase());\n    }\n  });\n\n  const handleDelete = (event) => {\n    const idDelete = event.target.id;\n    const postDelete = event.target.date;\n    console.log(postDelete);\n\n    if (\n      window.confirm(\n        `Are you sure you want to delete the entry for ${postDelete}?`\n      )\n    ) {\n      postServices.deletePost(idDelete).then((response) => {\n        return response.data;\n      });\n      postServices.getAll().then((response) => {\n        setPosts(response.data);\n      });\n      setSuccessMessage(`Deleted the entry for ${postDelete}`);\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 5000);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Gratitude Journal</h2>\n      <Filter filter={filter} handleFilter={handleFilter} />\n      <h2>Add a new post</h2>\n      <PostForm\n        addNewPost={addNewPost}\n        newContent={newContent}\n        handleNewPost={handleNewPost}\n        newDate={newDate}\n        handleNewDate={handleNewDate}\n      />\n      <h2>Entries</h2>\n      <Posts posts={posts} filtered={filtered} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
[{"/home/justin/gratitude-journal/src/index.js":"1","/home/justin/gratitude-journal/src/javascript.js":"2","/home/justin/gratitude-journal/src/App.js":"3","/home/justin/gratitude-journal/src/services/postServices.js":"4","/home/justin/gratitude-journal/src/components/filter.js":"5","/home/justin/gratitude-journal/src/components/postForm.js":"6","/home/justin/gratitude-journal/src/components/posts.js":"7","/home/justin/gratitude-journal/src/components/editForm.js":"8","/home/justin/gratitude-journal/src/components/message.js":"9","/home/justin/repos/gratitude-journal/src/index.js":"10","/home/justin/repos/gratitude-journal/src/javascript.js":"11","/home/justin/repos/gratitude-journal/src/App.js":"12","/home/justin/repos/gratitude-journal/src/services/postServices.js":"13","/home/justin/repos/gratitude-journal/src/components/filter.js":"14","/home/justin/repos/gratitude-journal/src/components/postForm.js":"15","/home/justin/repos/gratitude-journal/src/components/posts.js":"16","/home/justin/repos/gratitude-journal/src/components/message.js":"17"},{"size":213,"mtime":1683568048746,"results":"18","hashOfConfig":"19"},{"size":304,"mtime":1683549784720,"results":"20","hashOfConfig":"19"},{"size":10214,"mtime":1684481975440,"results":"21","hashOfConfig":"19"},{"size":431,"mtime":1683564659484,"results":"22","hashOfConfig":"19"},{"size":511,"mtime":1683687319496,"results":"23","hashOfConfig":"19"},{"size":1914,"mtime":1684481750702,"results":"24","hashOfConfig":"19"},{"size":2098,"mtime":1684463984766,"results":"25","hashOfConfig":"19"},{"size":1699,"mtime":1683776230619,"results":"26","hashOfConfig":"19"},{"size":168,"mtime":1684468263518,"results":"27","hashOfConfig":"19"},{"size":213,"mtime":1683568048746,"results":"28","hashOfConfig":"29"},{"size":304,"mtime":1683549784720,"results":"30","hashOfConfig":"29"},{"size":10214,"mtime":1684481975440,"results":"31","hashOfConfig":"29"},{"size":431,"mtime":1683564659484,"results":"32","hashOfConfig":"29"},{"size":511,"mtime":1683687319496,"results":"33","hashOfConfig":"29"},{"size":1914,"mtime":1684481750702,"results":"34","hashOfConfig":"29"},{"size":2098,"mtime":1684463984766,"results":"35","hashOfConfig":"29"},{"size":168,"mtime":1684468263518,"results":"36","hashOfConfig":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h4adbi",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mo5kqz",{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/justin/gratitude-journal/src/index.js",[],[],"/home/justin/gratitude-journal/src/javascript.js",["91","92"],[],"/home/justin/gratitude-journal/src/App.js",["93","94"],[],"/home/justin/gratitude-journal/src/services/postServices.js",["95"],[],"/home/justin/gratitude-journal/src/components/filter.js",[],[],"/home/justin/gratitude-journal/src/components/postForm.js",[],[],"/home/justin/gratitude-journal/src/components/posts.js",[],[],"/home/justin/gratitude-journal/src/components/editForm.js",[],[],"/home/justin/gratitude-journal/src/components/message.js",[],[],"/home/justin/repos/gratitude-journal/src/index.js",[],[],"/home/justin/repos/gratitude-journal/src/javascript.js",["96","97"],[],"function openPost() {\n  document.getElementById(\"entryForm\").style.display = \"block\";\n  document.getElementById(\"newButton\").style.display = \"none\";\n}\n\nfunction closePost() {\n  document.getElementById(\"entryForm\").style.display = \"none\";\n  document.getElementById(\"newButton\").style.display = \"block\";\n}\n","/home/justin/repos/gratitude-journal/src/App.js",["98","99"],[],"import { useState, useEffect } from \"react\";\nimport postServices from \"./services/postServices\";\n\nimport Filter from \"./components/filter\";\nimport PostForm from \"./components/postForm\";\nimport Posts from \"./components/posts\";\nimport sun from \"./images/sun.svg\";\nimport box from \"./images/box.png\";\nimport week from \"./images/week.png\";\nimport month from \"./images/month.png\";\nimport star from \"./images/star.png\";\n\n/* --- --- --- --- --- VARIABLES --- --- --- --- --- --- */\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [categorized, setCategorized] = useState([]);\n\n  useEffect(() => {\n    postServices.getAll().then((response) => {\n      setPosts(response.data);\n      setCategorized(response.data);\n    });\n  }, []);\n\n  const [filter, setFilter] = useState(\"\");\n  const [newContent, setNewContent] = useState(\"\");\n  const [newDate, setNewDate] = useState(\"\");\n  const [order, setOrder] = useState(true);\n  const [message, setMessage] = useState(null);\n  const [title, setTitle] = useState(\"ALL ENTRIES\");\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const handleNewPost = (event) => {\n    setNewContent(event.target.value);\n  };\n\n  const handleNewDate = (event) => {\n    setNewDate(event.target.value);\n  };\n\n  const generateId = () => {\n    return Math.floor(Math.random() * 9999999999999999);\n  };\n\n  /* --- --- --- --- --- SIDEBAR FUNCTIONS --- --- --- --- --- --- */\n\n  /*\n  const allEntries = () => {\n    postServices.getAll().then((response) => {\n      setPosts(response.data);\n    });\n  };\n  \n  const weekEntries = () => {\n    const today = new Date();\n    const weekAgo = new Date(today.setDate(today.getDate() - 7));\n    let weekPosts = posts.filter((post) => {\n      let pdate = new Date(post.date);\n      return pdate >= weekAgo;\n    });\n    setPosts(weekPosts);\n  };\n\n  const monthEntries = () => {\n    const today = new Date();\n    const monthAgo = new Date(today.setDate(today.getDate() - 30));\n    let monthPosts = posts.filter((post) => {\n      let pdate = new Date(post.date);\n      return pdate >= monthAgo;\n    });\n    setPosts(monthPosts);\n  };\n\n  const favoriteEntries = () => {\n    let favoritePosts = posts.filter((post) => {\n      return post.favorite === true;\n    });\n    setPosts(favoritePosts);\n  };\n*/\n\n  const categorizer = (event) => {\n    setCategorized(posts);\n    const today = new Date();\n    const weekAgo = new Date(today.setDate(today.getDate() - 7));\n    const monthAgo = new Date(today.setDate(today.getDate() - 30));\n    setCategorized(\n      posts.filter((post) => {\n        const postDate = new Date(post.date);\n        const postYear = new Date(post.date).getYear() + 1900;\n        if (post.content === undefined || post.content === null) {\n          return;\n        } else {\n          switch (event.target.id) {\n            case \"all\":\n              return post;\n            case \"week\":\n              return postDate >= weekAgo;\n            case \"month\":\n              return postDate >= monthAgo;\n            case \"favorites\":\n              return post.favorite === true;\n            case \"2023\":\n              return postYear === 2023;\n            case \"2022\":\n              return postYear === 2022;\n            default:\n              return post;\n          }\n        }\n      })\n    );\n    setTitle(event.target.name);\n  };\n\n  /* --- --- --- --- --- MAIN CONTENT FUNCTIONS --- --- --- --- --- --- */\n\n  const addNewPost = (event) => {\n    const newDateConv = new Date(newDate);\n    const options = {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n    };\n    const newPost = {\n      content: newContent,\n      date: newDateConv.toLocaleDateString(\"en-us\", options),\n      id: generateId(),\n      favorite: false,\n    };\n    event.preventDefault();\n\n    if (\n      posts\n        .map(\n          (post) =>\n            post.date === newDateConv.toLocaleDateString(\"en-us\", options)\n        )\n        .includes(true)\n    ) {\n      setMessage(`*There is already an existing entry for this date`);\n      setTimeout(() => {\n        setMessage(null);\n      }, 10000);\n    } else if (newContent.length > 100) {\n      setMessage(`*Entry must not exceed 100 characters`);\n      setTimeout(() => {\n        setMessage(null);\n      }, 10000);\n    } else if (newDateConv > new Date()) {\n      setMessage(`*Entry must not be set in the future`);\n      setTimeout(() => {\n        setMessage(null);\n      }, 10000);\n    } else {\n      setPosts(posts.concat(newPost));\n      setCategorized(posts.concat(newPost));\n      setTitle(\"ALL ENTRIES\");\n      setNewDate(\"\");\n\n      postServices.create(newPost).then((response) => {\n        setPosts(posts.concat(response.data));\n      });\n      setNewContent(\"\");\n    }\n  };\n\n  const filtered = categorized.filter((post) => {\n    if (\n      post.content === undefined ||\n      filter === undefined ||\n      filter === null ||\n      post.content === null\n    ) {\n      return;\n    } else {\n      return post.content.toLowerCase().includes(filter.toLowerCase());\n    }\n  });\n\n  const sortOrder = () => {\n    setOrder(!order);\n    postServices.getAll().then((response) => {\n      setPosts(response.data);\n    });\n  };\n\n  const sorted = filtered.sort((post1, post2) => {\n    if (order) {\n      return new Date(post1.date) - new Date(post2.date);\n    } else {\n      return new Date(post2.date) - new Date(post1.date);\n    }\n  });\n\n  const handleDelete = (event) => {\n    const idDelete = Number(event.target.id);\n    const postDelete = event.target.name;\n    console.log(postDelete);\n\n    if (\n      window.confirm(\n        `Are you sure you want to delete the entry for ${postDelete}?`\n      )\n    ) {\n      postServices.deletePost(idDelete).then((response) => {\n        return response.data;\n      });\n      postServices.getAll().then((response) => {\n        setPosts(response.data);\n        setCategorized(categorized.filter((post) => post.id !== idDelete));\n      });\n    }\n  };\n\n  const editPost = (event) => {\n    const targetDate = event.target.name;\n    const inputContent = prompt(\"New details for this entry:\", targetDate);\n    const idEdit = Number(event.target.id);\n    const postToChange = posts.find((post) => post.id === idEdit);\n    const changedPost = { ...postToChange, content: inputContent };\n\n    if (inputContent) {\n      postServices.update(idEdit, changedPost).then((response) => {\n        return response.data;\n      });\n      postServices.getAll().then((response) => {\n        setPosts(response.data);\n      });\n      setCategorized(\n        categorized.filter((post) => post.id !== idEdit).concat(changedPost)\n      );\n    } else {\n      return;\n    }\n  };\n\n  const changeStar = (event) => {\n    const idEdit = Number(event.target.id);\n    const starEdit = Boolean(event.target.name);\n    const postToChange = posts.find((post) => post.id === idEdit);\n    const changedPost = { ...postToChange, favorite: !starEdit };\n\n    postServices.update(idEdit, changedPost).then((response) => {\n      return response.data;\n    });\n    postServices.getAll().then((response) => {\n      setPosts(response.data);\n      setCategorized(\n        categorized.filter((post) => post.id !== idEdit).concat(changedPost)\n      );\n    });\n  };\n\n  /* --- --- --- --- --- APP RENDER --- --- --- --- --- --- */\n\n  return (\n    <div>\n      <div id=\"header\">\n        <div className=\"logo\">\n          <img src={sun} alt=\"\" id=\"sun\" />\n          <h1 className=\"title\">Gratitude Journal</h1>\n        </div>\n        <Filter filter={filter} handleFilter={handleFilter} />\n      </div>\n      <div id=\"main\">\n        <div id=\"sidebar\">\n          <div className=\"sbHeader\">HOME</div>\n          <hr />\n          <div className=\"sbitems\">\n            <img\n              src={box}\n              alt=\"\"\n              className=\"svgicon\"\n              onClick={categorizer}\n              name=\"ALL ENTRIES\"\n            />\n            <button id=\"all\" onClick={categorizer} name=\"ALL ENTRIES\">\n              ALL ENTRIES\n            </button>\n          </div>\n          <div className=\"sbitems\">\n            <img\n              src={week}\n              alt=\"\"\n              className=\"svgicon\"\n              onClick={categorizer}\n              name=\"LAST 7 DAYS\"\n            />\n            <button id=\"week\" onClick={categorizer} name=\"LAST 7 DAYS\">\n              LAST 7 DAYS\n            </button>\n          </div>\n          <div className=\"sbitems\">\n            <img\n              src={month}\n              alt=\"\"\n              className=\"svgicon\"\n              onClick={categorizer}\n              name=\"LAST 30 DAYS\"\n            />\n            <button id=\"month\" onClick={categorizer} name=\"LAST 30 DAYS\">\n              LAST 30 DAYS\n            </button>\n          </div>\n          <div className=\"sbitems\">\n            <img\n              src={star}\n              alt=\"\"\n              className=\"svgicon\"\n              onClick={categorizer}\n              name=\"STARRED\"\n            />\n            <button id=\"favorites\" onClick={categorizer} name=\"STARRED\">\n              STARRED\n            </button>\n          </div>\n          <br />\n          <br />\n          <div className=\"sbHeader\">ARCHIVE</div>\n          <hr />\n          <button\n            id=\"2023\"\n            className=\"archiveItems\"\n            onClick={categorizer}\n            name=\"2023\"\n          >\n            2023\n          </button>\n          <button\n            id=\"2022\"\n            className=\"archiveItems\"\n            onClick={categorizer}\n            name=\"2022\"\n          >\n            2022\n          </button>\n        </div>\n        <div id=\"content\">\n          <div className=\"titleBox\">\n            <p>{title}</p>\n          </div>\n          <Posts\n            posts={posts}\n            order={order}\n            sorted={sorted}\n            sortOrder={sortOrder}\n            changeStar={changeStar}\n            handleDelete={handleDelete}\n            editPost={editPost}\n          />\n          <PostForm\n            addNewPost={addNewPost}\n            newContent={newContent}\n            handleNewPost={handleNewPost}\n            newDate={newDate}\n            handleNewDate={handleNewDate}\n            message={message}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","/home/justin/repos/gratitude-journal/src/services/postServices.js",["100"],[],"import axios from \"axios\";\n\nconst baseUrl = \"http://localhost:3001/posts\";\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n};\n\nconst create = (newPost) => {\n  return axios.post(baseUrl, newPost);\n};\n\nconst deletePost = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nconst update = (id, changedPost) => {\n  return axios.put(`${baseUrl}/${id}`, changedPost);\n};\n\nexport default { getAll, create, deletePost, update };\n","/home/justin/repos/gratitude-journal/src/components/filter.js",[],[],"/home/justin/repos/gratitude-journal/src/components/postForm.js",[],[],"/home/justin/repos/gratitude-journal/src/components/posts.js",[],[],"/home/justin/repos/gratitude-journal/src/components/message.js",[],[],{"ruleId":"101","severity":1,"message":"102","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":18},{"ruleId":"101","severity":1,"message":"105","line":6,"column":10,"nodeType":"103","messageId":"104","endLine":6,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":96,"column":11,"nodeType":"108","messageId":"109","endLine":96,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":179,"column":7,"nodeType":"108","messageId":"109","endLine":179,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":21,"column":1,"nodeType":"112","endLine":21,"endColumn":55},{"ruleId":"101","severity":1,"message":"102","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":18},{"ruleId":"101","severity":1,"message":"105","line":6,"column":10,"nodeType":"103","messageId":"104","endLine":6,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":96,"column":11,"nodeType":"108","messageId":"109","endLine":96,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":179,"column":7,"nodeType":"108","messageId":"109","endLine":179,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":21,"column":1,"nodeType":"112","endLine":21,"endColumn":55},"no-unused-vars","'openPost' is defined but never used.","Identifier","unusedVar","'closePost' is defined but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]